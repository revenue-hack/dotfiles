openapi: 3.0.2
info:
  title: LMS API
  description: LMS機能の情報を取得・更新を行うためのAPIです
  version: '1.0'
servers:
  - url: http://localhost:28080/api
tags:
  - name: カテゴリ
  - name: 講習
  - name: 講習設定(e-Learning)
  - name: 受講
x-tagGroups:
  - name: APIリファレンス
    tags:
      - カテゴリ
      - 講習
      - 講習設定(e-Learning)
      - 受講
paths:
  /categories:
    get:
      tags:
        - カテゴリ
      summary: カテゴリの一覧を返却します
      description: カテゴリの一覧を返却します
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: カテゴリid
                          example: 1
                        name:
                          type: string
                          description: カテゴリ名
                          example: 新卒研修
                        courseCount:
                          type: number
                          description: カテゴリに紐づく講習の件数
                          example: 10
    post:
      tags:
        - カテゴリ
      summary: カテゴリの新規登録を行います
      description: カテゴリの新規登録を行います
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: カテゴリ名
                  required: true
                  example: キャリア支援
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: カテゴリid
                    example: 20
                  name:
                    type: string
                    description: カテゴリ名
                    example: キャリア支援
  /categories/{category_id}:
    patch:
      tags:
        - カテゴリ
      summary: カテゴリの編集を行います
      description: カテゴリの編集を行います
      parameters:
        - name: category_id
          in: path
          required: true
          description: 講習ID
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: カテゴリ名
                  required: true
                  example: キャリア支援
      responses:
        '204':
          description: No Content
    delete:
      tags:
        - カテゴリ
      summary: カテゴリの削除を行います
      description: カテゴリの削除を行います
      parameters:
        - name: category_id
          in: path
          required: true
          description: 講習ID
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: No Content
  /courses/search:
    post:
      tags:
        - 講習
      summary: 講習の検索を行います
      description: 講習の検索を行います
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courseType:
                  type: number
                  description: |
                    取得する講習の種別を表す区分値<br>
                      1: 必須の講習<br>
                      2: 任意の講習<br>
                      3: 回答期間が終了した講習<br>
                      4: 自身が受講済みの講習<br>
                  nullable: false
                  example: 1
                categoryId:
                  type: number
                  description: |
                    カテゴリIDでのフィルタを行う場合に指定<br>
                    未指定の場合は全てのカテゴリの講習を検索します
                  nullable: true
                  default: null
                  example: 10
                searchWord:
                  type: string
                  description: |
                    検索ワード<br>
                    講習名の部分一致を行います。（AND/OR検索非対応- ）
                  nullable: true
                  default: null
                  example: ロジカル
                nextPageToken:
                  type: number
                  description: >
                    2ページ目移行のデータを取得したい場合、1ページ目のAPIリクエスト時に返却されたnextPageTokenを設定<br>

                    値を指定しない場合は1ページ目のデータを取得します
                  nullable: true
                  default: null
                  example: xxxxxxxxxx
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maxPageSize:
                    type: number
                    description: 実行時点でのAPIから取得できる推定の最大ページ数です
                    example: 10
                  nextPageToken:
                    type: string
                    description: |
                      次のページを取得するためのトークンです<br>
                      次のページが存在しない場合にはnullを返却します
                    nullable: true
                    example: xxxxxxxxxx
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 講習id
                          example: 1
                        title:
                          type: string
                          description: 講習タイトル
                          example: ロジカルシンキング研修
                        thumbnailUrl:
                          type: string
                          description: サムネイル画像URL
                          example: http://localhost/path/to/img
                        categoryName:
                          type: string
                          description: |
                            カテゴリ名<br>
                            カテゴリが未設定の場合はnullを返却します
                          nullable: true
                          example: 新卒研修
                        expireAt:
                          type: string
                          description: |
                            受講期限<br>
                            受講期限がない場合はnullを返却します
                          nullable: true
                          example: '2023-01-10T10:00:00.000Z'
                        recommend:
                          type: number
                          description: |
                            おすすめ度の数値<br>
                            おすすめ度がない場合はnullを返却します
                          nullable: true
                          example: 90
                        isRequired:
                          type: boolean
                          description: 必須受講の講習を表すフラグ
                          example: true
                        isFixed:
                          type: boolean
                          description: 受講期間が終了した講習を表すフラグ
                          example: false
  /courses/{course_type}:
    post:
      tags:
        - 講習
      summary: 講習の新規作成を行います
      description: e-Learning、集合研修の新規作成を行います
      parameters:
        - name: course_type
          in: path
          required: true
          description: 登録を行う講習の種別
          schema:
            type: string
            enum:
              - e_learning
              - group_training
            example: e_learning
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 講習ID
                    example: 10
  /courses/{course_id}:
    delete:
      tags:
        - 講習
      summary: 講習の削除を行います
      description: 講習の削除を行います
      parameters:
        - $ref: '#/components/parameters/CourseId'
      responses:
        '204':
          description: No Content
  /courses/{course_id}/e_learning:
    get:
      tags:
        - 講習設定(e-Learning)
      summary: e-Learningの基礎情報の取得
      description: e-Learningの基礎情報（タイトル、概要等）を取得します
      parameters:
        - $ref: '#/components/parameters/CourseId'
      responses:
        '200':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: 講習のタイトル
                    example: ロジカルシンキング研修
                  description:
                    type: string
                    description: ロジカルな思考を身につけることができます
                    example: 10
                  categoryId:
                    type: integer
                    description: カテゴリID
                    example: 10
                    nullable: true
                  thumbnailImageUrl:
                    type: string
                    description: サムネイル画像URL
                    example: null
                  attendSchedule:
                    type: object
                    description: 受講期間
                    properties:
                      id:
                        type: integer
                        description: |
                          受講期間ID<br>
                          初回表示の場合はnullを返却します。
                        example: 100
                        nullable: true
                      from:
                        type: string
                        description: 受講開始
                        example: 2023/05/31 18:00
                        nullable: true
                      to:
                        type: string
                        description: 受講終了
                        example: 2023/05/31 18:00
                        nullable: true
    put:
      tags:
        - 講習設定(e-Learning)
      summary: e-Learningの基礎情報の更新
      description: e-Learningの基礎情報（タイトル、概要等）の更新を行います
      parameters:
        - $ref: '#/components/parameters/CourseId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 講習のタイトル
                  example: ロジカルシンキング研修
                description:
                  type: string
                  description: ロジカルな思考を身につけることができます
                  example: 10
                categoryId:
                  type: integer
                  description: カテゴリID
                  example: 10
                  nullable: true
                thumbnailImage:
                  type: string
                  description: |
                    サムネイル画像（base64エンコード）<br>
                    画像を更新が必要な場合のみ送信してください。未設定の場合はサムネイル画像の更新は行いません。<br>
                  nullable: true
                  example: null
                isRemoveThumbnailImage:
                  type: boolean
                  description: >
                    設定されているサムネイル画像を削除する場合にtrueを設定してください。<br>

                    このフィールドにtrueを設定した状態でthumbnailImageフィールドの値を指定した場合は、このフィールドの設定は無視されます。<br>

                    （thumbnailImageの画像での更新動作となります）<br>
                  example: false
                attendSchedule:
                  type: object
                  description: 受講期間
                  properties:
                    id:
                      type: integer
                      description: |
                        受講期間ID<br>
                        初回の受講期間保存時はnull、2回目以降は取得時に返却されるidを設定してください。<br>
                      example: 100
                      nullable: true
                    from:
                      type: string
                      description: 受講開始
                      example: 2023/05/31 18:00
                      nullable: true
                    to:
                      type: string
                      description: 受講終了
                      example: 2023/05/31 18:00
                      nullable: true
      responses:
        '204':
          description: No Content
  /attend/{course_id}/e_learning:
    get:
      tags:
        - 受講
      summary: 講習の詳細を取得します
      description: 講習の詳細を取得します
      parameters:
        - $ref: '#/components/parameters/CourseId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: 講習名
                    example: ロジカルシンキング研修
                  description:
                    type: string
                    description: 講習の詳細
                    example: ロジカルシンキング研修の詳細
                  isFixed:
                    type: boolean
                    description: 受講完了済みを表すフラグ
                    example: true
                  hasTest:
                    type: boolean
                    description: テストフォームが存在するかを表すフラグ
                    example: true
                  form:
                    type: object
                    properties:
                      id:
                        type: number
                        description: テストフォームID
                        example: 100
                      title:
                        type: string
                        description: フォームタイトル
                        example: 確認テスト
                  contents:
                    type: array
                    description: 講習に設定されている動画・ファイル・外部URLです
                    items:
                      type: object
                      properties:
                        contentType:
                          type: number
                          description: |
                            コンテンツの種別<br>
                              1: 動画<br>
                              2: ファイル<br>
                              3: 外部URL<br>
                          enum:
                            - 1
                            - 2
                            - 3
                          example: 1
                        title:
                          type: string
                          description: コンテンツタイトル
                          example: 研修動画①
                        url:
                          type: string
                          description: コンテンツ配信用URL
                          example: https://localhost/path/to/movie.m3u8
components:
  securitySchemes:
    bearerAuth:
      description: 事前に/shield/tokenで取得したAccessTokenを設定してください
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    CourseId:
      name: course_id
      in: path
      required: true
      description: 講習ID
      schema:
        type: integer
        example: 1
security:
  - bearerAuth: []
